setwd(wd)
source("./scripts/COPINGwaves.R")
treatRAMP <- treatRAMP %>%
filter(startDate > as.POSIXct("2020-06-01"))
keepcols.cope <- c("externalDataReference","dem.which_gender_do_you_identify_with")
cols.cope <- c("ID","Gender")
keepcols.nbr <- c("subjectid")
cols.nbr <- c("ID")
keepcols.ramp <- c("Login ID","dem2.how_old_are_you","dem2.which_gender_do_you_identify_with","dem2.where_in_the_uk_do_you_live.txt","dem2.what_is_your_ethnic_origin")
cols.ramp <- c("ID","Age","Gender","Postcode","Ethnicity")
names.postcode <- c("ID","Postcode")
dem.cope.glad <- demCOPE.glad[names(demCOPE.glad) %in% keepcols.cope]
dem.cope.edgi <- demCOPE.edgi[names(demCOPE.edgi) %in% keepcols.cope]
dem.cope.nbr <- demCOPE.nbr[names(demCOPE.nbr) %in% keepcols.nbr]
dem.ramp <- demRAMP[names(demRAMP) %in% keepcols.ramp]
names(dem.cope.glad) <- cols.cope
names(dem.cope.edgi) <- cols.cope
names(dem.cope.nbr) <- cols.nbr
names(dem.ramp) <- cols.ramp
names(GLADpostcode) <- names.postcode
names(EDGIpostcode) <- names.postcode
names(NBRpostcode) <- names.postcode
setwd(wd)
source("./scripts/clean_COPING_postcode_data.R")
dem.cope.glad <- left_join(dem.cope.glad,GLADpostcode)
dem.cope.edgi <- left_join(dem.cope.edgi,EDGIpostcode)
dem.cope.nbr <- left_join(dem.cope.nbr,NBRpostcode)
dem.cope.glad <- left_join(dem.cope.glad, GLADdemvars)
dem.cope.edgi <- left_join(dem.cope.edgi, EDGIdemvars)
dem.cope.nbr <- left_join(dem.cope.nbr, NBRdemvars)
View(dem.cope.glad)
dem.cope.glad$Sample <-  "COPING"
dem.cope.glad$SampleCOPE <-  "GLAD"
dem.cope.edgi$Sample <- "COPING"
dem.cope.edgi$SampleCOPE <- "EDGI"
dem.cope.nbr$Sample <- "COPING"
dem.cope.nbr$SampleCOPE <- "NBR"
dem.ramp$Sample <- "RAMP"
treatRAMP$Sample <- "RAMP"
treatCOPE$Sample <- "COPING"
dem.ramp <- dem.ramp %>%
mutate_at(vars(Age),
list(factor))  %>%
mutate(AgeAll = fct_recode(Age,
"16-18"="1",
"19-25"="2",
"26-35"="3",
"36-45"="4",
"46-55"="5",
"56-65"="6",
"66-70"="7",
"71-75"="8",
"76-80"="9",
"81-85"="10",
"86-90"="11",
"91-100"="12",
"100+"="13",
"Did not respond"="-77"
),
Age80up = fct_recode(Age,
"16-18"="1",
"19-25"="2",
"26-35"="3",
"36-45"="4",
"46-55"="5",
"56-65"="6",
"66-70"="7",
"71-75"="8",
"76-80"="9",
"81+"="10",
"81+"="11",
"81+"="12",
"81+"="13",
"Did not respond"="-77"
))
dem <- merge(dem.ramp,dem.cope.glad, all=TRUE)
dem <- merge(dem,dem.cope.edgi, all=TRUE)
View(dem)
dem <- merge(dem.ramp,dem.cope.glad, all=TRUE)
dem <- merge(dem,dem.cope.edgi, all=TRUE)
dem <- dem %>%
mutate_at(vars(Ethnicity),
list(factor))  %>%
mutate(Ethnicity = fct_recode(Ethnicity,
"White"="1",
"Mixed or multiple ethnicities"="2",
"Asian or Asian British"="3",
"Black or Black British"="4",
"Arab"="5",
"Other"="6",
"Prefer not to say"="-99",
"Don't know"="-88",
"Did not respond"="-77"
))
dem <- dem %>%
mutate_at(vars(Gender),
list(factor))  %>%
mutate(Gender = fct_recode(Gender,
"Male"="0",
"Female"="1",
"Non-binary"="2",
"Prefer to self define"="3",
"Prefer not to say"="-99",
"Don't know"="-88",
"Did not respond"="-77"
))
dem <- merge(dem,dem.nbr,all=TRUE)
#source data directory: data_path
source("/Users/kirstin/Dropbox/SGDP/RAMP/Projects/Treatment/file_paths.R")
setwd(wd)
source("./scripts/palettes.R")
source("./scripts/libraries.R")
dem <- merge(dem,dem.cope.nbr,all=TRUE)
View(dem)
demgen <- subset(dem,select = c("ID","Gender","Sample"))
setwd(wd)
source("./scripts/renameRAMPtreatment.R")
treatRAMP.fin <- treatRAMP.renamed[names(treatRAMP.renamed) %in% treatnames]
treatCOPE.fin <- treatCOPE.renamed[names(treatCOPE.renamed) %in% treatnames]
setwd(wd)
source("./scripts/renameRAMPtreatment.R")
treatRAMP.fin <- treatRAMP.renamed[names(treatRAMP.renamed) %in% treatnames]
treatCOPE.fin <- treatCOPE.renamed[names(treatCOPE.renamed) %in% treatnames]
treat_dat <- rbind(treatRAMP.fin,treatCOPE.fin)
setwd(wd)
source("./scripts/renameRAMPtreatment.R")
treatRAMP.fin <- treatRAMP.renamed[names(treatRAMP.renamed) %in% treatnames]
treatCOPE.fin <- treatCOPE.renamed[names(treatCOPE.renamed) %in% treatnames]
View(treatRAMP.fin)
View(treatCOPE.fin)
View(treatRAMP.fin)
names(treatRAMP.fin)
names(treatCOPE.fin)
remove(list = ls())
#source data directory: data_path
source("/Users/kirstin/Dropbox/SGDP/RAMP/Projects/Treatment/file_paths.R")
setwd(wd)
source("./scripts/palettes.R")
source("./scripts/libraries.R")
date = Sys.Date()
# source all functions in the function library folder
files.sources = paste0("../FunctionLib/",list.files("../FunctionLib"))
sapply(files.sources, source)
treatRAMP <- readRDS(file = paste0(data_path, "/ramp_followupb/treatment_ramp_followupb.rds"))
demRAMP <- readRDS(file = paste0(data_path, "/ramp/dem_ramp.RDS"))
treatCOPE <- readRDS(file = paste0(cope_path, "/coping_followupa_ongoing/treatment_coping_followupa_ongoing.rds"))
demCOPE.glad <- readRDS(file = paste0(data_path, "/coping_glad/dem_coping_glad.RDS"))
demCOPE.glad.baseline <- readRDS(file = paste0(data_path, "/glad/dem_glad.RDS"))
demCOPE.edgi <- readRDS(file = paste0(data_path, "/coping_edgi/dem_coping_edgi.RDS"))
demCOPE.edgi.baseline <- readRDS(file = paste0(data_path, "/edgi/demographics_edgi.RDS"))
demCOPE.nbr <- readRDS(file = paste0(data_path, "/coping_nbr/dem_coping_nbr.RDS"))
demCOPE.nbr.baseline <- fread(paste0(data_path, "/nbr/NBR_hlq_dem_data_hash.csv"))
GLADpostcode <- fread(paste0(postpath,"/GLAD_COPING_postcodes.csv"))
EDGIpostcode <- fread(paste0(postpath,"/EDGI_COPING_postcodes.csv"))
NBRpostcode <- fread(paste0(postpath,"/NBR_postcodes_hash.csv"))
MHD.COPE.glad <- readRDS(file = paste0(cope_path, "/coping_glad/mhd_coping_glad.rds"))
#MHD.COPE.edgi <- readRDS(file = paste0(cope_path, "/coping_edgi/mhd_coping_edgi.rds")) THIS IS IN THE DEMOGRAPHICS
MHD.COPE.nbr <- readRDS(file = paste0(cope_path, "/coping_nbr/mhd_coping_nbr.rds"))
MHD.RAMP <- readRDS(file = paste0(cope_path, "/ramp/mhd_ramp.rds"))
GLADdemvars <- demCOPE.glad.baseline %>%
select("externalDataReference","dem.which_gender_do_you_identify_with","dem.questions_based_ethnic_origin","dem.how_old_are_you_now.txt") %>%
rename(ID=externalDataReference,
Gender=dem.which_gender_do_you_identify_with,
Ethnicity=dem.questions_based_ethnic_origin,
Age.linear = dem.how_old_are_you_now.txt)
GLADdemvars <- GLADdemvars %>%
mutate(AgeAll = case_when(Age.linear >=16 & Age.linear <= 18 ~ "16-18",
Age.linear >=19 & Age.linear <= 25 ~ "19-25",
Age.linear >=26 & Age.linear <= 35 ~ "26-35",
Age.linear >=36 & Age.linear <= 45 ~ "36-45",
Age.linear >=46 & Age.linear <= 55 ~ "46-55",
Age.linear >=56 & Age.linear <= 65 ~ "56-65",
Age.linear >=66 & Age.linear <= 70 ~ "66-70",
Age.linear >=71 & Age.linear <= 75 ~ "71-75",
Age.linear >=76 & Age.linear <= 80 ~ "76-80",
Age.linear >=81 & Age.linear <= 85 ~ "81-85",
Age.linear >=86 & Age.linear <= 90 ~ "86-90",
Age.linear >=91 & Age.linear <= 100 ~ "91-100",
Age.linear >=101 ~ "100+",
Age.linear ==-77 ~ "Did not respond"),
Age80up = case_when(Age.linear >=16 & Age.linear <= 18 ~ "16-18",
Age.linear >=19 & Age.linear <= 25 ~ "19-25",
Age.linear >=26 & Age.linear <= 35 ~ "26-35",
Age.linear >=36 & Age.linear <= 45 ~ "36-45",
Age.linear >=46 & Age.linear <= 55 ~ "46-55",
Age.linear >=56 & Age.linear <= 65 ~ "56-65",
Age.linear >=66 & Age.linear <= 70 ~ "66-70",
Age.linear >=71 & Age.linear <= 75 ~ "71-75",
Age.linear >=76 & Age.linear <= 80 ~ "76-80",
Age.linear >=81  ~ "81+",
Age.linear ==-77 ~ "Did not respond"))
EDGIdemvars <- demCOPE.edgi.baseline %>%
select("externalDataReference","demographics.what_gender_do_you_identify_with","demographics.what_is_your_ethnic_origin","dem.how_old_are_you_now.txt") %>%
rename(ID=externalDataReference,
Gender=demographics.what_gender_do_you_identify_with,
Ethnicity=demographics.what_is_your_ethnic_origin,
Age.linear = dem.how_old_are_you_now.txt)
EDGIdemvars <- EDGIdemvars %>%
mutate(AgeAll = case_when(Age.linear >=16 & Age.linear <= 18 ~ "16-18",
Age.linear >=19 & Age.linear <= 25 ~ "19-25",
Age.linear >=26 & Age.linear <= 35 ~ "26-35",
Age.linear >=36 & Age.linear <= 45 ~ "36-45",
Age.linear >=46 & Age.linear <= 55 ~ "46-55",
Age.linear >=56 & Age.linear <= 65 ~ "56-65",
Age.linear >=66 & Age.linear <= 70 ~ "66-70",
Age.linear >=71 & Age.linear <= 75 ~ "71-75",
Age.linear >=76 & Age.linear <= 80 ~ "76-80",
Age.linear >=81 & Age.linear <= 85 ~ "81-85",
Age.linear >=86 & Age.linear <= 90 ~ "86-90",
Age.linear >=91 & Age.linear <= 100 ~ "91-100",
Age.linear >=101 ~ "100+",
Age.linear ==-77 ~ "Did not respond"),
Age80up = case_when(Age.linear >=16 & Age.linear <= 18 ~ "16-18",
Age.linear >=19 & Age.linear <= 25 ~ "19-25",
Age.linear >=26 & Age.linear <= 35 ~ "26-35",
Age.linear >=36 & Age.linear <= 45 ~ "36-45",
Age.linear >=46 & Age.linear <= 55 ~ "46-55",
Age.linear >=56 & Age.linear <= 65 ~ "56-65",
Age.linear >=66 & Age.linear <= 70 ~ "66-70",
Age.linear >=71 & Age.linear <= 75 ~ "71-75",
Age.linear >=76 & Age.linear <= 80 ~ "76-80",
Age.linear >=81  ~ "81+",
Age.linear ==-77 ~ "Did not respond"))
NBRdemvars <- demCOPE.nbr.baseline %>%
select("nbr_id","gender","ethnicity2001","age") %>%
rename(ID=nbr_id,
Gender=gender,
Ethnicity=ethnicity2001,
Age.linear = age)
NBRdemvars <- NBRdemvars %>%
mutate(AgeAll = case_when(Age.linear >=16 & Age.linear <= 18 ~ "16-18",
Age.linear >=19 & Age.linear <= 25 ~ "19-25",
Age.linear >=26 & Age.linear <= 35 ~ "26-35",
Age.linear >=36 & Age.linear <= 45 ~ "36-45",
Age.linear >=46 & Age.linear <= 55 ~ "46-55",
Age.linear >=56 & Age.linear <= 65 ~ "56-65",
Age.linear >=66 & Age.linear <= 70 ~ "66-70",
Age.linear >=71 & Age.linear <= 75 ~ "71-75",
Age.linear >=76 & Age.linear <= 80 ~ "76-80",
Age.linear >=81 & Age.linear <= 85 ~ "81-85",
Age.linear >=86 & Age.linear <= 90 ~ "86-90",
Age.linear >=91 & Age.linear <= 100 ~ "91-100",
Age.linear >=101 ~ "100+",
Age.linear ==-77 ~ "Did not respond"),
Age80up = case_when(Age.linear >=16 & Age.linear <= 18 ~ "16-18",
Age.linear >=19 & Age.linear <= 25 ~ "19-25",
Age.linear >=26 & Age.linear <= 35 ~ "26-35",
Age.linear >=36 & Age.linear <= 45 ~ "36-45",
Age.linear >=46 & Age.linear <= 55 ~ "46-55",
Age.linear >=56 & Age.linear <= 65 ~ "56-65",
Age.linear >=66 & Age.linear <= 70 ~ "66-70",
Age.linear >=71 & Age.linear <= 75 ~ "71-75",
Age.linear >=76 & Age.linear <= 80 ~ "76-80",
Age.linear >=81  ~ "81+",
Age.linear ==-77 ~ "Did not respond"))
NBRdemvars <- NBRdemvars %>%
mutate(Ethnicity = case_when(Ethnicity == "A (White - British)" |
Ethnicity == "B (White - Irish)" |
Ethnicity == "C (White - Other White)" ~ "White",
Ethnicity == "D (Mixed - White and Black Caribbean)" |
Ethnicity == "E (Mixed - White and Black African)" |
Ethnicity == "F (Mixed - White and Asian)" |
Ethnicity == "G (Mixed - Other Mixed)" ~ "Mixed or multiple ethnicities",
Ethnicity == "H (Asian or Asian British - Indian)" |
Ethnicity == "J (Asian or Asian British - Pakistani)" |
Ethnicity == "K (Asian or Asian British - Bangladeshi)" |
Ethnicity == "L (Asian or Asian British - Other Asian)" ~ "Asian or Asian British",
Ethnicity == "M (Black or Black British - Caribbean)" |
Ethnicity == "N (Black or Black British - African)" |
Ethnicity == "P (Black or Black British - Other Black)" ~ "Black or Black British",
Ethnicity == "R (Other Ethnic - Chinese)" |
Ethnicity == "S (Other Ethnic - Other Ethnic)" ~ "Other",
Ethnicity == "Z (Not Stated)" ~ "Seen but not answered"))
NBRdemvars <- NBRdemvars %>%
mutate(Gender = case_when(Gender == "Male" ~ "Male",
Gender == "Female" ~ "Female",
Gender == "" ~ "Did not respond"))
setwd(wd)
source("./scripts/RAMPwaves.R")
setwd(wd)
source("./scripts/COPINGwaves.R")
treatRAMP <- treatRAMP %>%
filter(startDate > as.POSIXct("2020-06-01"))
keepcols.cope <- c("externalDataReference","dem.which_gender_do_you_identify_with")
cols.cope <- c("ID","Gender")
keepcols.nbr <- c("subjectid")
cols.nbr <- c("ID")
keepcols.ramp <- c("Login ID","dem2.how_old_are_you","dem2.which_gender_do_you_identify_with","dem2.where_in_the_uk_do_you_live.txt","dem2.what_is_your_ethnic_origin")
cols.ramp <- c("ID","Age","Gender","Postcode","Ethnicity")
names.postcode <- c("ID","Postcode")
dem.cope.glad <- demCOPE.glad[names(demCOPE.glad) %in% keepcols.cope]
dem.cope.edgi <- demCOPE.edgi[names(demCOPE.edgi) %in% keepcols.cope]
dem.cope.nbr <- demCOPE.nbr[names(demCOPE.nbr) %in% keepcols.nbr]
dem.ramp <- demRAMP[names(demRAMP) %in% keepcols.ramp]
names(dem.cope.glad) <- cols.cope
names(dem.cope.edgi) <- cols.cope
names(dem.cope.nbr) <- cols.nbr
names(dem.ramp) <- cols.ramp
names(GLADpostcode) <- names.postcode
names(EDGIpostcode) <- names.postcode
names(NBRpostcode) <- names.postcode
setwd(wd)
source("./scripts/clean_COPING_postcode_data.R")
dem.cope.glad <- left_join(dem.cope.glad,GLADpostcode)
dem.cope.edgi <- left_join(dem.cope.edgi,EDGIpostcode)
dem.cope.nbr <- left_join(dem.cope.nbr,NBRpostcode)
dem.cope.glad <- left_join(dem.cope.glad, GLADdemvars)
dem.cope.edgi <- left_join(dem.cope.edgi, EDGIdemvars)
dem.cope.nbr <- left_join(dem.cope.nbr, NBRdemvars)
dem.cope.glad$Sample <-  "COPING"
dem.cope.glad$SampleCOPE <-  "GLAD"
dem.cope.edgi$Sample <- "COPING"
dem.cope.edgi$SampleCOPE <- "EDGI"
dem.cope.nbr$Sample <- "COPING"
dem.cope.nbr$SampleCOPE <- "NBR"
dem.ramp$Sample <- "RAMP"
treatRAMP$Sample <- "RAMP"
treatCOPE$Sample <- "COPING"
dem.ramp <- dem.ramp %>%
mutate_at(vars(Age),
list(factor))  %>%
mutate(AgeAll = fct_recode(Age,
"16-18"="1",
"19-25"="2",
"26-35"="3",
"36-45"="4",
"46-55"="5",
"56-65"="6",
"66-70"="7",
"71-75"="8",
"76-80"="9",
"81-85"="10",
"86-90"="11",
"91-100"="12",
"100+"="13",
"Did not respond"="-77"
),
Age80up = fct_recode(Age,
"16-18"="1",
"19-25"="2",
"26-35"="3",
"36-45"="4",
"46-55"="5",
"56-65"="6",
"66-70"="7",
"71-75"="8",
"76-80"="9",
"81+"="10",
"81+"="11",
"81+"="12",
"81+"="13",
"Did not respond"="-77"
))
dem <- merge(dem.ramp,dem.cope.glad, all=TRUE)
dem <- merge(dem,dem.cope.edgi, all=TRUE)
dem <- dem %>%
mutate_at(vars(Ethnicity),
list(factor))  %>%
mutate(Ethnicity = fct_recode(Ethnicity,
"White"="1",
"Mixed or multiple ethnicities"="2",
"Asian or Asian British"="3",
"Black or Black British"="4",
"Arab"="5",
"Other"="6",
"Prefer not to say"="-99",
"Don't know"="-88",
"Did not respond"="-77"
))
dem <- dem %>%
mutate_at(vars(Gender),
list(factor))  %>%
mutate(Gender = fct_recode(Gender,
"Male"="0",
"Female"="1",
"Non-binary"="2",
"Prefer to self define"="3",
"Prefer not to say"="-99",
"Don't know"="-88",
"Did not respond"="-77"
))
dem <- merge(dem,dem.cope.nbr,all=TRUE)
demgen <- subset(dem,select = c("ID","Gender","Sample"))
source("./scripts/renameRAMPtreatment.R")
setwd(wd)
source("./scripts/renameRAMPtreatment.R")
treatRAMP.fin <- treatRAMP.renamed[names(treatRAMP.renamed) %in% treatnames]
treatCOPE.fin <- treatCOPE.renamed[names(treatCOPE.renamed) %in% treatnames]
treat_dat <- rbind(treatRAMP.fin,treatCOPE.fin)
treat_dat$wave <- factor(treat_dat$wave,
levels = c("May 2020","June 2020", "July 2020","August 2020","September 2020","October 2020","November 2020","December 2020","January 2021"))
DupIDdat <- treat_dat %>%
pivot_wider(id_cols = ID,
names_from = wave,
values_from = soughthelp_for_self,
values_fn = length)
dupids <- DupIDdat$ID[(DupIDdat$`June 2020` > 1 | DupIDdat$`July 2020` > 1 |
DupIDdat$`August 2020` > 1 | DupIDdat$`September 2020` > 1 |
DupIDdat$`October 2020` > 1 | DupIDdat$`November 2020` > 1 |
DupIDdat$`December 2020` > 1 | DupIDdat$`January 2021` > 1)]
dupids <- unique(dupids)
treat_dat <- treat_dat[(treat_dat$ID %!in% dupids),]
treat_dat$soughthelp_for_self <- ifelse(treat_dat$soughthelp_for_self == -77,NA,treat_dat$soughthelp_for_self)
treat_dat <- treat_dat %>%
mutate(ReasonSeek = case_when(reasonhelp_new_mh == 1 ~ "Newly emerging symptoms",
reasonhelp_cont_mh == 1 | reasonhelp_worsen_mh == 1 | reasonhelp_repeat_prescription == 1 |
reasonhelp_change_med == 1 | reasonhelp_alt_support == 1 ~ "Existing mental health",
reasonhelp_mh_crisis == 1 ~ "Mental health crisis",
reasonhelp_new_med == 1 ~ "Seeking new treatment"))
treat_dat[grep("wherehelp",names(treat_dat))] <-apply(treat_dat[grep("wherehelp",names(treat_dat))],2,function(x) ifelse(x == -77,NA, x))
treat_dat <- treat_dat %>%
mutate(TypeSought.Supported.Any  = case_when(wherehelp_sought_emergency_mh == 1 ~ "Sought Supported",
wherehelp_sought_existing_mh_team == 1 ~ "Sought Supported",
wherehelp_sought_online_talk_therapy == 1 ~ "Sought Supported",
wherehelp_sought_gp == 1 ~ "Sought Supported",
wherehelp_sought_nonnhs_phone == 1 ~ "Sought Supported",
wherehelp_sought_nhs_111 == 1 ~ "Sought Supported",
TRUE ~ "Did not seek supported treatment"),
TypeSought.SelfGuide.Any = case_when(
wherehelp_sought_gov_website == 1 ~ "Sought Self-guided",
wherehelp_sought_selfguide_online == 1 ~ "Sought Self-guided",
wherehelp_sought_nongov_website == 1 ~ "Sought Self-guided",
wherehelp_sought_struc_therapy == 1 ~ "Sought Self-guided",
TRUE ~ "Did not seek self-guided treatment")) %>%
mutate(AnySought = case_when(TypeSought.Supported.Any  == "Sought Supported" ~ 1,
TypeSought.SelfGuide.Any  == "Sought Self-guided" ~ 1,
TRUE ~ 0))
supportcols <- c("wherehelp_sought_emergency_mh","wherehelp_sought_online_talk_therapy",
"wherehelp_sought_gp","wherehelp_sought_existing_mh_team",
" wherehelp_received_nonnhs_phone","wherehelp_sought_nhs_111")
selfcols <- c("wherehelp_sought_gov_website","wherehelp_received_selfguide_online",
"wherehelp_sought_nongov_website","wherehelp_sought_struc_therapy")
treat_dat$TypeSought.Supported.total <- rowSums(treat_dat[names(treat_dat) %in% supportcols],na.rm = T)
treat_dat$TypeSought.SelfGuided.total <- rowSums(treat_dat[names(treat_dat) %in% selfcols],na.rm = T)
treat_dat <- treat_dat %>%
mutate(TypeReceived.Supported.Any  = case_when(wherehelp_received_emergency_mh == 1 ~ "Received Supported",
wherehelp_received_existing_mh_team == 1 ~ "Received Supported",
wherehelp_received_online_talk_therapy == 1 ~ "Received Supported",
wherehelp_received_gp == 1 ~ "Received Supported",
wherehelp_received_nonnhs_phone == 1 ~ "Received Supported",
wherehelp_received_nhs_111 == 1 ~ "Received Supported",
TRUE ~ "Did not receive supported treatment"),
TypeReceived.SelfGuide.Any = case_when(
wherehelp_received_gov_website == 1 ~ "Received Self-guided",
wherehelp_received_selfguide_online == 1 ~ "Received Self-guided",
wherehelp_received_nongov_website == 1 ~ "Received Self-guided",
wherehelp_received_struc_therapy == 1 ~ "Received Self-guided",
TRUE ~ "Did not receive self-guided treatment")) %>%
mutate(AnyReceived = case_when(TypeReceived.Supported.Any  == "Received Supported" ~ 1,
TypeReceived.SelfGuide.Any  == "Received Self-guided" ~ 1,
TRUE ~ 0))
treat_dat  <- treat_dat %>%
mutate(AnyNoReceipt = case_when(AnyReceived == 0 ~1,
TRUE ~ 0))
supportcols <- c("wherehelp_received_emergency_mh","wherehelp_received_online_talk_therapy",
"wherehelp_received_gp","wherehelp_received_existing_mh_team",
" wherehelp_received_nonnhs_phone","wherehelp_received_nhs_111")
selfcols <- c("wherehelp_received_gov_website","wherehelp_received_selfguide_online",
"wherehelp_received_nongov_website","wherehelp_received_struc_therapy")
treat_dat$TypeReceived.Supported.total <- rowSums(treat_dat[names(treat_dat) %in% supportcols],na.rm = T)
treat_dat$TypeReceived.SelfGuided.total <- rowSums(treat_dat[names(treat_dat) %in% selfcols],na.rm = T)
treat_dat_byID <- treat_dat %>%
group_by(ID) %>%
tally(soughthelp_for_self)
treat_dat_byIDSamp <- treat_dat %>%
group_by(ID,Sample) %>%
tally(soughthelp_for_self)
treat_dat_byID$AnySeek <- ifelse(treat_dat_byID$n > 0,"Sought help at least once", "Never sought help")
treat_dat_byIDSamp$AnySeek <- ifelse(treat_dat_byIDSamp$n > 0,"Sought help at least once", "Never sought help")
setwd(wd)
## factorise and label barrier and helpfulness
source("./scripts/relabel_barriers_help_factors.R")
treat_dat[grep("prevent",names(treat_dat))] <- apply(treat_dat[grep("prevent",names(treat_dat))], 2, function(x)
ifelse(x == "Could not get an appointment","Systemic",x))
treat_dat[grep("prevent",names(treat_dat))] <- apply(treat_dat[grep("prevent",names(treat_dat))], 2, function(x)
ifelse(x == "Waiting list was too long","Systemic",x))
treat_dat[grep("prevent",names(treat_dat))] <- apply(treat_dat[grep("prevent",names(treat_dat))], 2, function(x)
ifelse(x == "Was assessed and was unable to be offered support","Systemic",x))
treat_dat[grep("prevent",names(treat_dat))] <- apply(treat_dat[grep("prevent",names(treat_dat))], 2, function(x)
ifelse(x == "Support option was unavailable when tried to access it","Systemic",x))
## client level
treat_dat[grep("prevent",names(treat_dat))] <- apply(treat_dat[grep("prevent",names(treat_dat))], 2, function(x)
ifelse(x == "None of the support options were relevant","Client-level",x))
treat_dat[grep("prevent",names(treat_dat))] <- apply(treat_dat[grep("prevent",names(treat_dat))], 2, function(x)
ifelse(x == "Didn't feel well enough to engage","Client-level",x))
treat_dat[grep("prevent",names(treat_dat))] <- apply(treat_dat[grep("prevent",names(treat_dat))], 2, function(x)
ifelse(x == "Was too busy to engage","Client-level",x))
treat_dat[grep("prevent",names(treat_dat))] <- apply(treat_dat[grep("prevent",names(treat_dat))], 2, function(x)
ifelse(x == "Felt better","Client-level",x))
setwd(wd)
source("./scripts/Barriers_column_creation.R")
setwd(wd)
source("./scripts/Relabel_helpful_factors.R")
setwd(wd)
source("./scripts/Helpfulness_column_creation.R")
dem <- dem %>%
filter(dem$ID %in% treat_dat$ID) %>%
distinct(.)
dem %>%
freq(Ethnicity)
dem %>%
group_by(Sample) %>%
freq(Ethnicity)
dem %>%
freq(Gender)
names(MHD\)
names(MHD.RAMP)
head(MHD.RAMP$mhq.anorexia_nervosa)
table(MHD.RAMP$mhq.anorexia_nervosa)
names(MHD.COPE.glad)
names(MHD.COPE.nbr)
names(MHD.RAMP)
